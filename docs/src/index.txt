======================
Documentation Overview
======================

Welcome in the Werkzeug documentation.

Reference
=========

Documentation regarding the Werkzeug modules and Werkzeug as such.

- `Installing Werkzeug <installation.txt>`_

- `Important Terms <terms.txt>`_ - read this before reading the
  Werkzeug documentation.

- `Wrappers <wrappers.txt>`_ - wrap environ and start_response
  in request/response objects.

- `Routing System <routing.txt>`_ - a powerful URL dispatcher
  and builder.

- `Mini Templates <templates.txt>`_ - minimal templating system

- `Management Script Utilities <script.txt>`_ - tools to write simple
  management scripts.

- `Test Utilities <test.txt>`_ - send requests to your application
  from the python interpreter or unittests.

- `Utilities <utils.txt>`_ - useful things like multi value dicts,
  a data structure for headers etc.

- `Context Locals <local.txt>`_ - WSGI centric version of thread.local

- `Debugging System <debug.txt>`_ - interactive debugger

- `API Stability <api_stability.txt>`_ - API stability


General Development Information
===============================

This part of the documentation mainly explains how to develop WSGI
applications. This is also interesting if you don't want to use
Werkzeug but other WSGI utilities, the ideas are the same.

- `Serving WSGI Applications <serving.txt>`_ - serving WSGI applications.

- `How WSGI Works <wsgihowto.txt>`_ - short introduction to WSGI and
  Werkzeug.

- `Organizing Code <organizing.txt>`_ - gives you an idea how you can
  organize your code when using Werkzeug.

- `Other Libraries <libraries.txt>`_ - links to other libraries you
  can use with Werkzeug.

- `Deploying WSGI Applications <deploying.txt>`_ - ready for production?
  This page covers all the details you have to know to deploy your
  application on various webservers.
